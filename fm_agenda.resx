<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_novo_age.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>